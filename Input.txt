########## INPUT FILE FOR HINDCAST TOOL #############
	#FOR FORMATNG RULES SEE: ./Tips_Readme/Input_template.txt


*DataBase*
path_DataBase				>		"C:/Users/aaron.lange/Desktop/Projekte/HindcastArchive/2_54.41_5.95_ABP_Mer/54.41_5.95_ABP_Mer.db"
colnames_preset				>		None
JBOOST_proj					>		"A:/2024/24A523_Waterkant/JBOOST/JBOOST_Model_Gravity/proj.lua"						
JBOOST_input				>		"A:/2024/24A523_Waterkant/JBOOST/JBOOST_Model_Gravity/Input JBOOST WAK-DP-A-LILA-MySE18-260-v0.lua"
create_report				>		True
Report_Input				>		"ReportInput.txt"

*Structure*
steep_crit					>		0.04									>	float:	Steepness limit (Hs/lamda(Tp)) for WaveBreaking 
f_0							>		0.1554									>	float:	first resonance-frequency (overrides value in ".\JBOOST\proj.lua")

d_from_proj					> 		True
d							>		20

*DataOut*
path_out					>		'../_Hindcast_out/'								>	str:	path for output-files, it is created if it doesent exist
dir_name					>		None									>	str or none:	if str, name of the folder created in the path_out (Attention, can overwrite old foulders), if None, name is given, including a timestamp (recommended)
CSV_out						>		True 									>	bool:	if True, export of all calculated data in "path_out/dirname/csv_data"
CSV_deep					>		False											

*AngleSection*
mode_angle					>		"full"									>	str:	seperation mode, "full": eqal division of the whole circle in "N_angle" parts	'section': equal devision in "N_angle" parts of the size "width_angle"
N_angle						>		12										>	int:	number of angle segments
width_angle					>		15										>	int:	width of angle slice, only used when mode_angle = 'section'
angle_start					>		-15										>	int:	starting angle 

*Filter*
timeframe					>		False									>	bool:	if True, choose timeframe specified below
datetime_start				>		'1979-01-01 07:00:00'							>	str:	startdatetime in the format: "YYYY-MM-DD"
datetime_end				>		'1981-07-01 07:00:00'							>	str:	enddatetime in the format: "YYYY-MM-DD"

*Toggle_Modules*
#calc_VMHS					>		['wind', 'total', 'swell']									
#calc_HSTP					>		['wind', 'total', 'swell']							
#calc_VMTP					>		['wind', 'total', 'swell']								
#calc_RWI					>		['wind', 'total']								
#calc_Tables					>		['wind', 'swell']											
#calc_WaveBreak_Steep		>		['wind', 'total']										
#calc_AngleDeviation 		>		['dir_v_m', 'dir_T_mean_Wind', 'v_m']						>	angle_orig, angle_deviation, v_m
#calc_Roseplots				>		True									>	 [[angle, magnitude],[angle, magnitude]]
#calc_ExtremeValues			>		True									
#calc_Validation 			>		['wind', 'swell']											
#calc_SensorEval				>		True
#calc_Weibull				>		[['dir_v_m', 'v_m']]
#calc_ExtremeConture			>		[['H_s', 'T_p', 'dir_v_m']]

plot_VMHS					>		['wind', 'total', 'swell']
plot_HSTP					>		['wind', 'swell', 'total']
plot_VMTP					>		['wind', 'swell', 'total']
plot_RWI					>		['wind', 'total']
plot_BreakSteep				>		['wind', 'total']
plot_Tables					>		['wind', 'swell', 'total']
plot_AngleDeviation			>		True
plot_Roseplots				>		True
plot_ExtremeValues			>		True
plot_Validation 			>		['wind', 'swell']
plot_SensorEval				>		True
plot_Weibull				>		True
#plot_condensation_example	>		True
plot_report_tables			>		True

plot_as						>		["png"]
use_pgf						>		True
dpi_figures					>		500									>	int: resolution (dots per sqinch) of all pdf's
writing_box					>		[17, 22]



*ColumNames*
datetime					>		"Datetime"
v_m 						>	 	"Ws,10min,150m"
dir_v_m 					> 		"Wdir,1hr,10m"
H_s							>		"Hs"
H_max						>		"Hmax"
T_p							>		"Tp"
dir_T_p						>		"Pdir"
H_s_wind					>		"Hs,Sea"
T_p_wind					>		"Tp,Sea"
dir_T_mean					>		"Mdir,Sea"
H_s_swell					>		"Hs,Swell"
T_p_swell					>		"Tp,Swell"
dir_T_mean_Swell			>		"Mdir,Swell"
dir_T_mean_Wind				>		"Mdir,Sea"
WL							>		"WL"
dir_curr					>		"Cdir,DA"
WL_tide						>		"WL,Tid"
v_curr 						>		"Cs,Surf"

*Aliase*
datetime					>		"date [UTC]"
v_m 						>	 	"Wind Speed at 150m [m/s]"
dir_v_m 					> 		"Wind Direction at 10m [deg]"
H_s							>		"Sign. Wave Height [m]"
H_max						>		"Maximal Wave Height [m]"
T_p							>		"Peak Wave Period [s]"
dir_T_p						>		"Peak Wave Direction [deg]"
H_s_wind					>		"Sign. Wave Height, Wind-Sea [m]"
T_p_wind					>		"Peak Wave Period, Wind-Sea [s]"
dir_T_mean					>		"Mean Wave Direction [deg]"
H_s_swell					>		"Sign. Wave Height, Swell [m]"
T_p_swell					>		"Peak Wave Period, Swell [s]"
WL							>		"Water Level [mMSL]"
dir_T_mean_Swell			>		"Mean Wave Direction, Swell [deg]"
dir_T_mean_Wind				>		"Mean Wave Direction, Wind-sea [deg]" 
dir_curr					>		"Current Direction [deg]"
WL_tide						>		"Water Level, Tide [mMSL]"
v_curr 						>		"Current Speed Surface [m/s]"


*VMHS_wind*
N_grid						>		100										>	int: 	number of bins in Vm-Axis
deg_reg						>		3									>	int: 	degree used for regression 
model_reg					>		'poly'									>	str: 	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), see documentation
cut_reg						>		95										>	float: 	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[0,None]								>	list: 	range from which calculating the regression function is determined, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None] 								>	zone: 	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0 										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
average_correction			>		1
avrg_method					>		"weighted mean" 							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		True

*VMHS_swell*
N_grid						>		20										>	int: 	number of bins in Vm-Axis
deg_reg						>		0									>	int: 	degree used for regression 
model_reg					>		'poly'									>	str: 	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), see documentation
cut_reg						>		100										>	float: 	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[0,None]								>	list: 	range from which calculating the regression function is determined, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None] 								>	zone: 	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0 										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
average_correction			>		1.05
avrg_method					>		"weighted mean" 							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		True

*VMHS_total*
N_grid						>		60										>	int: 	number of bins in Vm-Axis
deg_reg						>		3									>	int: 	degree used for regression 
model_reg					>		'poly'									>	str: 	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), see documentation
cut_reg						>		60									>	float: 	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[2, None]								>	list: 	range from which calculating the regression function is determined, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[2, None] 								>	zone: 	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0 										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
average_correction			>		1
avrg_method					>		"weighted mean" 							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		True

*HSTP_wind*
N_grid						>		100										>	int:	number of bins in Hs-Axis
deg_reg						>		3										>	int:	degree used for regression 
model_reg					>		'sqrt'									>	str:	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), , see documentation
cut_reg						>		95										>	float:	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[0, None]								>	list:	range included for calculating the regression function, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None]								>	zone:	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
percentiles					>		[33,66]									>	list:	percentiles to display, 50% not necessary, covered by mean, any number of percentiles possible
quantile_relative			>		5										>	realative offset
quantile					>		True									>	bool:	if True: plot "quantile" line, is expectiong quant_low, quant_up and two percentiles, over and under mean
quant_low					>		0.15582									>	float:	lower (Period) limit (higher frequency value) of resonance frequency band, if None: not plotted
quant_up					>		0.14098									>	float:	upper (Period) limit (lower frequency value) of resonance frequency band, if None: not plotted
avrg_method					>		"median"							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)avrg_method					>		"mean"							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		False


*HSTP_swell*
N_grid						>		100										>	int:	number of bins in Hs-Axis
deg_reg						>		3										>	int:	degree used for regression 
model_reg					>		'sqrt'									>	str:	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), , see documentation
cut_reg						>		0										>	float:	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[0, None]								>	list:	range included for calculating the regression function, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None]								>	zone:	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
percentiles					>		[]									>	list:	percentiles to display, 50% not necessary, covered by mean, any number of percentiles possible
quantile					>		False									>	bool:	if True: plot "quantile" line, is expectiong quant_low, quant_up and two percentiles, over and under mean
quantile_relative			>		None										>	realative offset
quant_low					>		0.1647									>	float:	lower (Period) limit (higher frequency value) of resonance frequency band, if None: not plotted
quant_up					>		0.1647									>	float:	upper (Period) limit (lower frequency value) of resonance frequency band, if None: not plotted
avrg_method					>		"median"							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		False

*HSTP_total*
N_grid						>		50										>	int:	number of bins in Hs-Axis
deg_reg						>		2										>	int:	degree used for regression 
model_reg					>		'sqrt'									>	str:	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), , see documentation
cut_reg						>		0										>	float:	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[0, None]								>	list:	range included for calculating the regression function, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None]								>	zone:	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
percentiles					>		[]									>	list:	percentiles to display, 50% not necessary, covered by mean, any number of percentiles possible
quantile					>		False									>	bool:	if True: plot "quantile" line, is expectiong quant_low, quant_up and two percentiles, over and under mean
quantile_relative			>		None										>	realative offset
quant_low					>		0.1647									>	float:	lower (Period) limit (higher frequency value) of resonance frequency band, if None: not plotted
quant_up					>		0.1647									>	float:	upper (Period) limit (lower frequency value) of resonance frequency band, if None: not plotted
avrg_method					>		"median"							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		False


*Tables*
vm_zone 					>		[0.5, None]								>	list:	range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (dependend on calculations from VMHS, HSTP, VMTP)
vm_step						>		1										>	float:	Vm-step, starting from the lower limit as the edge of the bin, middle-Points are displayed in Table


*RosePlot* 
label_by_section			>		True									>	bool: 	if True, every predefined section has its own label, if False, 8 sections 
rot_r_label					> 		0										>	float:	roation of r-lables in degree


*Validation_wind*
from_DB						> 		True
table_name					>		"DEL_config_1"							
nodes_to_load				>		['501']							> bei None: 'all'
scatter_configs				>		['IDLING node 501']


*Validation_swell*
from_DB						> 		True
table_name					>		"DEL_config_2"
nodes_to_load				>		['501']
scatter_configs				>		['IDLING node 501']

*Roseplots*
wind						>		[['dir_v_m', 'v_m']]
total_sea					>		[['dir_T_mean', 'H_s']]
swell_sea					>		[['dir_T_mean_Swell', 'H_s_swell']]	
wind_sea					>		[['dir_T_mean_Wind', 'H_s_wind']]

currents					>		[['dir_curr', 'v_curr']]

*SensorEval*
Sensors 					>		['v_m','H_s','H_max','T_p','H_s_wind','T_p_wind','H_s_swell','T_p_swell','WL','WL_tide','v_curr']


*AngleDeviation*
v_m_zone					>		[0.5,None]
v_m_step					>		1
N_angle_comp_sec			>		12										>   float:	Vm-step, starting from the lower limit as the edge of the bin, middle-Points are displayed in Table
filter_by					>		["H_s_wind", "T_p_wind"]
margin						>		[[1, 100], [1, 100]]

*ExtremeValues*
sensors_Wind				>		['dir_v_m','v_m']
#sensors_Water_level			>		[None,'WL']
sensors_Wave_height			>		['dir_T_mean','H_max']

time_window_offset			>		0.5
N_itter						>		500			
perc_up						>		95	
perc_down					>		5
conf_inter_mode				>		'percentile'							> percentile oder std
conf_inter_algorithm		>		'2'										> 1 oder 2 
T_return					>		[5,10,50]
freq_samp					>		1

*VMHS_docu*
N_grid						>		20										>	int: 	number of bins in Vm-Axis
deg_reg						>		3									>	int: 	degree used for regression 
model_reg					>		'poly'									>	str: 	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), see documentation
cut_reg						>		95										>	float: 	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
weighting_reg				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
zone_reg 					>		[15,None]								>	list: 	range from which calculating the regression function is determined, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
zone_line					> 		[0, None] 								>	zone: 	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0 										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
average_correction			>		1
avrg_method					>		"weighted mean" 							>	bool: 	toogle weighting of Hs - Values ("squared mean" , "mean", "median", see documentation)
make_monotone 				>		True


