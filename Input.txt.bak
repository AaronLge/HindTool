########## INPUT FILE FOR HINDCAST TOOL #############
	#FOR FORMATNG RULES SEE: ./Tips_Readme/Input_template.txt

#GENERAL

*SELECT*

# Specif Data Input, further specified in sections
DATA						>		"MetOcean"								>	list:	{"MetOcean", "APG_mer", "General"}, expected in .csv Format  

#Column Names in CSV Data		
col_name_angle				>		"Wind Direction at 10m (WD_{10}) [\Deg.N-from]"	>	str:	colum name of direction - information to separate the sections by			
col_name_Hs					>		"Sign. Wave Height - Wind-Sea (H_{m0-Sea}) [m]"	>	str:	colum name of Hs - information
col_name_Tp					>		"Peak Wave Period - Wind-Sea (T_{p-Sea}) [s]"			>	str:	colum name of Tp - information
col_name_Vm					>		"Wind Speed at 10m (WS_{10}) [m/s]"		>	str:	colum name of Vm - information

#Angle Sections
mode_angle					>		"full"									>	str:	seperation mode, "full": eqal division of the whole circle in "N_angle" parts	'section': equal devision in "N_angle" parts of the size "width_angle"
N_angle						>		12										>	int:	number of angle segments
width_angle					>		15										>	int:	width of angle slice, only used when mode_angle = 'section'
angle_start					>		-15										>	int:	starting angle 
include_360					>		True									>	bool:	if True, include omni-directional in plots and table
			
#Filter data by Lims
Vm_lim						>		[0,None]								>	list:	calculated range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
Hs_lim						>		[0,None]								>	list:	calculated range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
Tp_lim						>		[0,None]								>	list:	calculated range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)

#Filter by Timeframe
timeframe					>		False									>	bool:	if True, choose timeframe specified below
datetime_start				>		'1999-1-1'								>	str:	startdatetime in the format: "YYYY-MM-DD"
datetime_end				>		'2002-10-1'								>	str:	enddatetime in the format: "YYYY-MM-DD"
dt_sample 					>		'1h'									>	str:	sample frequency to resample to, prefered to be the same as in the data, if "MetOcean" Data-Input selected, use the lower of the two frequencys to downsample (upsampling not reliable)

#Toggle Modules
calc_VMHS					>		True									>	bool:	if True, calculate Hs(Vm) Data
calc_HSTP					>		True									>	bool:	if True, calculate Tp(Hs) Data
calc_VMTP					>		True									>	bool:	if True, calculate Vm(Tp) Data 
calc_WaveBreak_Steep		> 		False									>	bool:	if True, calculate WaveBreaking (linear, Steepness limited) of every Datapoint 
calc_RWI					>		False									>	bool:	if True, calculate RWI (Resonant-Wave-Intensity) as the Amplitude at the Resonance Frequency f_0 (specified in "RWI") of the JONSWAP-Spectrum spanned by every HsTp Point of the DataSet	
RosePlot					>		False									>	bool:	if True, calculate and plot RosePlot, any given Data in the dataset can be plottet, e.g current against Waveheight, specified in "Roseplot" section
Tables						>		False									>	bool:	if True, calculate and plot Hs(Vm) and Vm(Tp) Tables for all angle sections specified. Data is interpolated on the Vm-Points specified in "Tables" from the section "VMHS" and "HSTP"
Validation					> 		False									>	bool: 	if True Validation of the Table Datapoints by calculating the DEL's with JBOOST and comparing it to the DEL's of the scattered datapoints (Calculation of DEL base might take a long time, see Section "Validation")
Data_eval					>		False
Angle_Deviation				>		False
Extreme_Analyis				>		False 


#Specify plots with: 	list:	"'tiled' ": 6x2 tiled pdf pages, filled with all angles specified, " 'single', num_section " single plot of section with "num_section", multiple sections possible possible (eg. ['tiled', 'single', 1, 'single', 5] 
writing_box					>		[17, 23]
Report_edition				>		True

plot_VMHS					>		['single',1]		
plot_HSTP					>		['single',1]				
plot_VMTP					>		['single',1]				
plot_RWI					>		['tiled']	
plot_WaveBreak_Steep		>		['tiled']				
plot_Validation_line		>		['tiled','single',1]						>	lineplot comparing hindcast and condensed data vm-vise for IDLING and PRODUCTION, including histogram and total DEL's
plot_Validation_scatter		>		['tiled','single',1]						>	plot displaying hindcast data in Hs-Tp scatterplot, colored by the DEL value. configuration (Productionmode/Node) selectable in Section "Validation"
plot_Angle_Deviation		>		True
plot_Extreme_Analyis		>		True

plot_as						>		["png"]

exclude_Tp_zero				>		True									>	bool:	if True, Tp = 0 entrys are deleted (likley artefact from low wind-sea and hight swell and the seperation into the two)

dpi_figures					>		1000									>	int: resolution (dots per sqinch) of all pdf's
	
# Specif Data Outut	
path_out					>		'./out/'								>	str:	path for output-files, it is created if it doesent exist
dir_name					>		None									>	str or none:	if str, name of the folder created in the path_out (Attention, can overwrite old foulders), if None, name is given, including a timestamp (recommended) 
CSV_out						>		False 									>	bool:	if True, export of all calculated data in "path_out/dirname/csv_data"


#MODULES 
*DATA_METOCEAN*	
path_wave					>		"./Data_Generic/Generic Site A_DWF23_AT_WRF_10min_010m_4.918762_54.983196_100_1665.2_1979-01-01_2023-10-01_.csv">	str:	path to wave data (metocean formating expected)
path_wind					>		"./Data_Generic/Generic Site A_DWF23_SW_WRF_4.918762_54.983196_40.8_5879.8_1979-01-01_2023-09-30_.csv">	str:	path to wind data (metocean formating expected)
path_water					>		"./Data_Generic/Generic Site A_DWF23_HD_WRF_4.918762_54.983196_40.7_3554.8_1979-01-01_2023-09-30_.csv"
		
*APG_mer*				
path_data					>		"./Data_2/HindcastN3p8_v3.csv"			>	str:	path to APG - data (csv - formating expected)
Seperation					>		";"										>	str:	sepearation of .csv
		
		
*General*				
path_data					>		"./Data_2/HindcastN3p8_v3.csv"			>	str:	path to data (csv - Formating expected)
Seperation					>  		";"										>	str:	sepearation of .csv
drop_rows					>		slice(0,1)								>	slice(start, end): rows to be dropped (to delete any strings in Data, first row should be alway the header) example: delete first row after header: slice(0,1) 
DateTime_mode				> 		"seperated"								>	list:	{"standard", "seperated"}, if "standard" datetime (ISO 8601) [UTC] in column 1 expected, if "seperated" Colums ["Year", "Month", "Day", "Hour", "Minute"] in colums 1 to 6 expected


*VMHS*
N_grid						>		100										>	int: 	number of bins in Vm-Axis
weight						>		True									>	bool: 	toogle weighting of Hs - Values (squared, see documentation)
deg_regression				>		3										>	int: 	degree used for regression 
reg_model					>		'poly'									>	str: 	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), see documentation
cut_reg						>		95										>	float: 	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
reg_weighting				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
reg_free_n					>		True									>	bool:	if False, intercept at origin is forced, if True, its not, can influence behavior for higher values as well, other modes than 'poly' can alter it 
reg_zone 					>		[10, 30]								>	list: 	range from which calculating the regression function is determined, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
line_plot_zone				> 		[0, None] 								>	zone: 	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0 										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
percentiles					>		[]										>	list:	percentiles to display, 50% not necessary, covered by mean, any number and value of percentiles possible
plot_xlims					>		[0,None]								>	list:	plotted range in Vm-Axis (also scatter-data), if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[0,None]								>	list:	plotted range in Hs-Axis(also scatter-data), if [.. , None], the upper limit is the maximal found value (global)
name_plot					>		"VMHS"									>	str:	name of the saved figure/pdf 
name_x_axis					>		"Wind Speed at 10m [m/s]"	>	str or None: name of the x-Axis, if None: col_name_Vm
name_y_axis					>		"Significant Wave Height Windsea [m]"	>	str or None: name of the y-Axis, if None: col_name_Hs
name_angle					>		"wind direction"						>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
colormap_gradient 			>		0.3										>	float:	controlles the Heatmap, smaller value, bigger heatmap			


*HSTP*
N_grid						>		100										>	int:	number of bins in Hs-Axis
deg_regression				>		3										>	int:	degree used for regression 
reg_model					>		'sqrt'									>	str:	method used for regression ('poly' : polynominal, 'sqrt' : squareroot), , see documentation
cut_reg						>		95										>	float:	percentage calculated with mean-values, the top (100 - cut_reg)% by regression
reg_weighting				>		0										>	float:	weighting of regression by number of data-points in bin, 1: full weighting 0: no weighting
reg_free_n					>		True									>	bool:	if False, intercept at origin is forced, if True, its not, can influence behavior for higher values as well, other modes than 'poly' can alter it 
reg_zone 					>		[2, 8]									>	list:	range included for calculating the regression function, if[.. , None], the upper limit is the maximal found value (from the current angle-section)
quantile					>		True									>	bool:	if True: plot "quantile" line, is expectiong quant_low, quant_up and two percentiles, over and under mean
quant_low					>		0.150									>	float:	lower (Period) limit (higher frequency value) of resonance frequency band, if None: not plotted
quant_up					>		0.136									>	float:	upper (Period) limit (lower frequency value) of resonance frequency band, if None: not plotted
quant_label_x				>		0.7										>	float:	[0..1],relative position of the label of resonance band
line_plot_zone				> 		[0, None]								>	zone:	zone, in which the regression (or mean) plot is shown (or displayed in the tables), if [.. , None]  the upper limit is the maximal found value, excuding values under n_bin (from the current angle-section)
bin_min						>		0										>	int:	mininmal number of Datapoints in one bin to include the bin in any calculation
percentiles					>		[33,66]									>	list:	percentiles to display, 50% not necessary, covered by mean, any number of percentiles possible
plot_xlims					>		[0,None]								>	list:	plotted range in Hs-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[0,None]								>	list:	plotted range in Tp-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_plot					>		"HSTP"									>	str:	name of the saved figure/pdf 
name_x_axis					>		"Significant Wave Height Windsea [m]"	>	str or None: name of the x-Axis, if None: col_name_Hs
name_y_axis					>		"Peak Wave Period Windsea [s]"			>	str or None: name of the y-Axis, if None: col_name_Tp
name_angle					>		"wind direction"						>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
colormap_gradient			>		0.2										>	float:	controlles the Point-Heatmap, smaller value, bigger color-gradient	


*RWI*
f_0							>		0.1428									>	float:	first Resonance-Frequency of the structure
col_name_x					>		None									>	str:	colum name of Hs-Data, if None: col_name_Hs
col_name_y					>		None									>	str:	colum name of Tp-Data, if None: col_name_Tp
plot_xlims					>		[0,None]								>	list:	plotted range in Hs-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[0,None]								>	list:	plotted range in Tp-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_angle					>		"angle of wind"							>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
name_x_axis					>		"Significant Wave Height Windsea [m]"	>	str or None: name of the x-Axis, if None: col_name_Hs
name_y_axis					>		"Peak Wave Period Windsea [s]"			>	str or None: name of the y-Axis, if None: col_name_Tp
name_plot					>		"RWI"									>	str: 	name of the saved figure/pdf 
name_colorbar				> 		None									>	str: 	Name displayed next to the Colorbar, if None: "RWI = $\\sqrt{S(f_0)$ (Resonance Wave Intesity) $[\\sqrt{m^2/Hz}]$"


*WaveBreak_Steep*
steep_crit					>		0.04									>	float:	Steepness limit (Hs/lamda(Tp)) for WaveBreaking 
plot_xlims					>		[0,None]								>	list:	plotted range in Hs-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[0,None]								>	list:	plotted range in Tp-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_angle					>		"wind direction"						>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
name_x_axis					>		"Significant Wave Height Windsea [m]"	>	str or None: name of the x-Axis, if None: col_name_Hs
name_y_axis					>		"Peak Wave Period Windsea [s]"			>	str or None: name of the y-Axis, if None: col_name_Tp
name_plot					>		"WaveBreak_steep"						>	str:	name of the saved figure/pdf 
colormap_gradient			> 		0.3										>	float:	controlles the Point-Heatmap, smaller value, bigger color-gradient			
d 							> 		40										>	float:	Waterdepth in m, used for calculating the Wavelength with the linear Dispersion-Equation	


*VMTP* #PLOT FOR CHECKING QUALITY OF REGRESSION AND CROSS_CORRELATION 
plot_xlims					>		[0,None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value, dependend on VMHS-section limits (global)
plot_ylims					>		[0,None]								>	list:	plotted range in Tp-Axis, if [.. , None], the upper limit is the maximal found value, dependend on HSTP-section limits (global)
name_plot					>		"VMTP"									>	str:	name of the saved figure/pdf 
name_x_axis					>		"Wind Speed at 10m [m/s]"				>	str or None: name of the VM-Axis, if None: col_name_Vm
name_y_axis					>		"Peak Wave Period Windsea [s]"			>	str or None: name of the TP-Axis, if None: col_name_Tp
name_angle					>		"wind direction"						>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
colormap_gradient 			>		0.4										>	float:	controlles the Heatmap, smaller value, bigger heatmap			


*Tables*
Vm_zone 					>		[0.5, None]								>	list:	range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (dependend on calculations from VMHS, HSTP, VMTP)
Vm_step						>		1										>	float:	Vm-step, starting from the lower limit as the edge of the bin, middle-Points are displayed in Table
name_plot					>		["VMHS_table.pdf", "VMTP_table.pdf"]	>	str: 	name of the saved figures/pdf [VMHS, VMTP]
name_v_hub					>		"v_hub [m/s]"							>	str:	label Vm-Column 


*RosePlot* 
col_name_angle				>		"Mean Wave Direction - Wind-Sea (MWD_{Sea}) [\Deg.N-from]"									>	str or None:	colum name of direction - information, if None, angle taken from SELECTION section
col_name_r					>		"Peak Wave Period - Wind-Sea (T_{p-Sea}) [s]"		>	str:	colum name of radial plotted data
r_zone						>		[0,None]								>	list:	plotted range in r-Axis, if [.. , None], the upper limit is the maximal found value, Data already filterd by limits and timezone in Select-Section 
r_section_step				>		1.25									>	float:	stepsize of radial plotted data 
grid						>		True									>	bool:	plot grid
title						>		None									>	str or None:	title of plot, if None standard title: "Roseplot {col_name_r} over {col_name_angle}"
name_colorbar				>		"Significant Wave Height Windsea [m]"	>	str or None:	descritipn of colorbar, if None standard: {col_name_r}
label_by_section			>		True									>	bool: 	if True, every predefined section has its own label, if False, 8 sections 
name_plot					>		"WindRose"								>	str:	Name of pdf-File
rot_r_label					> 		0										>	float:	roation of r-lables in degree


*Validation*

calc_DEL_base				>		False 									>	bool: 	if True, calculate loaded hindcast data with JBOOST (might take a long time!) if False, load Hindcast-Data from path's specified below
path_DEL_base				>		"./Data_Generic/DEL_base.out"					>	str: used if calc_DEL_base==False, path to precalculated DEL's of hindcast data 
path_DEL_base_lookup		>		"./Data_Generic/DEL_base.txt"					>	str: used if calc_DEL_base==False, path to lookup table exported with the hindcast DEL-Data

gamma						>		3.3										>	float:	gamma-Value of JONSWAP-Spectum, unused at the moment 
design_life					>		32.5									>	float:	structural design life in years (overrides value in ".\JBOOST\proj.lua")
N_ref						>	 	1.0E7									>	float:	number of cycles for DEL calculation (overrides value in ".\JBOOST\proj.lua")
SN_slope					>	 	5										>	float:	S-N slope material (overrides value in ".\JBOOST\proj.lua")
f_0							>		0.1428									>	float:	first resonance-frequency (overrides value in ".\JBOOST\proj.lua")
res_Nodes					>		{501.0}									>	list of nodes, only one node supportet at the moment! if calc_DEL_base = False, make shure loaded database is calclated with same node! 
name_angle					>		"wind direction"						>	str:	title of the plots (name_angle + ": [deg_beg to deg_end]")
plot_xlims					>		[0, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis					>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis					>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
config_scatter				>		"IDLING node 501"						>	str:	configuration to plot, syntax: {IDLING, PRODUCTION} node {node}, eg. "IDLING node 501"
plot_xlims_scatter			>		[0, None]								>	list:	plotted range in Hs-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_scatter			>		[0, None]								>	list:	plotted range in Tp-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_scatter			>		"Significant Wave Height Windsea [m]"	>	str or None: name of the x-Axis, if None: col_name_Hs
name_y_axis_scatter			>		"Peak Wave Period Windsea [s]"			>	str or None: name of the y-Axis, if None: col_name_Tp
name_colorbar				>		None									>	str or None:	name of the colorbar displaying the DEL-value, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
name_plot					>		"Validation"							>	str:	Name of pdf-File

*Histogram*
bin_size					>		None

plot_xlims_Hs				>		[0, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Hs				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Hs				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Hs				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

plot_xlims_Tp				>		[0, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Tp				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Tp				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Tp				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

plot_xlims_Vm				>		[0, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Vm				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Vm				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Vm				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

col_name_free				>		None
plot_xlims_free				>		[0, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_free				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_free			>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_fee				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

title_single				>		None

*Timeseries*
plot_xlims_Hs				>		[None, None]							>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Hs				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Hs				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Hs				>		"magnitude [m]"							>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

plot_xlims_Tp				>		[None, None]							>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Tp				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Tp				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Tp				>		"magnitude [s]"							>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

plot_xlims_Vm				>		[None, None]							>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_Vm				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_Vm				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_Vm				>		"magnitude [m/s]"						>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

col_name_free				>		None
plot_xlims_free				>		[None, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_free				>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_free			>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_fee				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"

title_single				>		None

*Angle_Deviation*
angle_compare				>		"Mean Wave Direction - Wind-Sea (MWD_{Sea}) [\Deg.N-from]"
Vm_zone 					>		[0.5, None]								>	list:	range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (dependend on calculations from VMHS, HSTP, VMTP)
Vm_step						>		1										>	float:	Vm-step, starting from the lower limit as the edge of the bin, middle-Points are displayed in Table
angle_step					>		30
name_plot					>		["VMHS_table.pdf", "VMTP_table.pdf"]	>	str: 	name of the saved figures/pdf [VMHS, VMTP]
name_v_hub					>		"v_hub [m/s]"							>	str:	label Vm-Column 
plot_xlims					>		[None, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims					>		[None, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis					>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis					>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
title 						>		None

*Extreme_Analyis*

freq_samp					>		1
time_window_offeset			>		0.5
itter_deviations			>		10000
col_name_values				>		"Hs"					

plot_xlims_timeseries		>		[None, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_timeseries		>		[0, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_timeseries		>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_timeseries		>		"Magnitude [m]"									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
title_timeseries			>		None

plot_xlims_qq				>		[None, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_qq				>		[None, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_qq				>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_qq				>		None									>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
title_qq					>		None
perc_up						>		95	
perc_down					>		5
std_dev						>		False

plot_xlims_T_Return			>		[None, None]								>	list:	plotted range in Vm-Axis, if [.. , None], the upper limit is the maximal found value (global)
plot_ylims_T_Return			>		[None, None]								>	list:	plotted range in DEL-Axis, if [.. , None], the upper limit is the maximal found value (global)
name_x_axis_T_Return		>		None									>	str or None: name of the x-Axis, if None: "Wind speed V_m in m/s"
name_y_axis_T_Return		>		"Magnitude [m]"										>	str or None: name of the y-Axis, if None: "Bending DEL [Nm | m = _ | N_ref = _ | lifetime = _y]"
T_Return_single				>		[5,10,50,100]
mode_Intervall				> 		2
